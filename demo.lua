--[[
    Grow a Garden ‚Äì System Monitor Bot
    Author : depso (g·ªëc) | Mod : Nguyen Nhan
    T√≠nh nƒÉng: Weather + Anti-AFK + Rejoin + Webhook + System Status c·∫≠p nh·∫≠t m·ªói 1s
]]

local HttpService      = game:GetService("HttpService")
local Players          = game:GetService("Players")
local RunService       = game:GetService("RunService")
local VirtualUser      = cloneref(game:GetService("VirtualUser"))
local GuiService       = game:GetService("GuiService")
local TeleportService  = game:GetService("TeleportService")
local ReplicatedStorage= game:GetService("ReplicatedStorage")
local Stats            = game:GetService("Stats")

local LP = Players.LocalPlayer
local JobId = game.JobId
local PlaceId = game.PlaceId

-- CONFIG
local WEBHOOK = "https://discord.com/api/webhooks/1388136802342146208/LqqE8pdN3JyzX2EXt4rf282ewLGClVPtnE2jZhq7KyzTfDiY5-r_sYr3RdzMq-TMHRql"
local SCRIPT_URL = "https://raw.githubusercontent.com/NguyenNhandz/new/main/demo.lua"

-- FUNCTIONS
local function sendEmbed(title, desc, color)
    local data = {
        embeds = {{
            title = title,
            description = desc,
            color = color or 16777215,
            footer = { text = "Nguyen Nhan ‚Ä¢ Roblox Auto Monitor" },
            timestamp = DateTime.now():ToIsoDate()
        }}
    }
    task.spawn(request, {
        Url = WEBHOOK,
        Method = "POST",
        Headers = { ["Content-Type"] = "application/json" },
        Body = HttpService:JSONEncode(data)
    })
end

-- Startup
sendEmbed("‚úÖ B·∫Øt ƒë·∫ßu gi√°m s√°t", LP.Name .. " ƒë√£ v√†o game!\nJobId: `" .. JobId .. "`", 0x2ecc71)

-- Anti-AFK
LP.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
    sendEmbed("üí§ Anti-AFK", LP.Name .. " ƒë√£ ƒë∆∞·ª£c c·ª©u kh·ªèi AFK!", 0x3498db)
end)

-- Auto Rejoin
GuiService.ErrorMessageChanged:Connect(function()
    sendEmbed("üîÅ Rejoin", LP.Name .. " b·ªã disconnect, ƒëang v√†o l·∫°i...", 0xe67e22)
    queue_on_teleport("loadstring(game:HttpGet('" .. SCRIPT_URL .. "'))()")
    wait(5)
    TeleportService:TeleportToPlaceInstance(PlaceId, JobId, LP)
end)

-- Weather
ReplicatedStorage:WaitForChild("GameEvents"):WaitForChild("WeatherEventStarted").OnClientEvent:Connect(function(Event, Length)
    local endUnix = math.floor(workspace:GetServerTimeNow()) + Length
    sendEmbed("‚õÖ Weather", "**" .. Event .. "**\nK·∫øt th√∫c: <t:" .. endUnix .. ":R>", 0x9b59b6)
end)

-- SYSTEM STATUS REPORT (1s/l·∫ßn)
task.spawn(function()
    local startTime = os.clock()
    while true do
        pcall(function()
            local uptime = os.clock() - startTime
            local mem = math.floor(Stats:GetTotalMemoryUsageMb())
            local ping = Stats.Network.ServerStatsItem["Data Ping"]:GetValue()
            local fps = math.floor(1 / RunService.RenderStepped:Wait())
            local cpu = math.clamp((mem / 2048) * 100, 1, 100)
            local is_exe = identifyexecutor and identifyexecutor() or "Kh√¥ng r√µ"

            local desc = table.concat({
                "üë§ **Account**: `" .. LP.Name .. "` (" .. LP.DisplayName .. ")",
                "üåê **Ping**: `" .. ping .. "ms`",
                "üíæ **Memory**: `" .. mem .. " MB`",
                "‚öôÔ∏è **CPU ∆Ø·ªõc l∆∞·ª£ng**: `" .. math.floor(cpu) .. "%`",
                "üìä **FPS**: `" .. fps .. "`",
                "üïí **Th·ªùi gian online**: `" .. math.floor(uptime) .. " gi√¢y`",
                "üñ•Ô∏è **Executor**: `" .. tostring(is_exe) .. "`",
                "üì° **JobId**: `" .. JobId .. "`"
            }, "\n")

            sendEmbed("üìü Tr·∫°ng th√°i h·ªá th·ªëng (1s)", desc, 0x1abc9c)
        end)
        wait(1)
    end
end)
